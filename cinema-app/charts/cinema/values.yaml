# Default values for cinema.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 644435390668.dkr.ecr.eu-central-1.amazonaws.com/cinema
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
  containerPort: 8000
  env:
    DJANGO_SETTINGS_MODULE: cinema.settings
    DEBUG: "True"
    DB_NAME: cinema

Django:
  SECRET_KEY: ""
  DB_URL: "mongodb://root:example@mongo:27017/"
  
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 80
  targetPort: 8000

ingress:
  enabled: false
  className: "alb"
  annotations: {}
#    kubernetes.io/tls-acme: "true"
#    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
#    kubernetes.io/ingress.class: nginx
#    alb.ingress.kubernetes.io/scheme: internet-facing
#    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-3:644435390668:certificate/xxx
#    external-dns.alpha.kubernetes.io/hostname: example.com
  hosts:
    - host: example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: example-cert
      hosts:
        - example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

mongodb:
  architecture: replicaset
  replicaCount: 1
  service:
    nameOverride: "mongo"
  auth:
    enabled: true
    rootUser: root
    rootPassword: example
  persistence:
    resourcePolicy: keep
